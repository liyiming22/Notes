(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{372:function(t,s,a){"use strict";a.r(s);var e=a(25),r=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"this-is-javascript-notes"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#this-is-javascript-notes"}},[t._v("#")]),t._v(" This is JavaScript notes")]),t._v(" "),a("h2",{attrs:{id:"esm-vs-cjs"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#esm-vs-cjs"}},[t._v("#")]),t._v(" ESM vs CJS")]),t._v(" "),a("h3",{attrs:{id:"相互引用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#相互引用"}},[t._v("#")]),t._v(" 相互引用")]),t._v(" "),a("ol",[a("li",[a("p",[a("code",[t._v("ESM")]),t._v(" 模块只能 "),a("code",[t._v("import")]),t._v(" 而不能 "),a("code",[t._v("require")]),t._v("。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("ESM")]),t._v(" 模块可以 "),a("code",[t._v("import")]),t._v(" "),a("code",[t._v("CJS")]),t._v(" 模块，但是只能通过"),a("em",[t._v("默认导入")]),t._v("的模式，比如"),a("code",[t._v("import _ from 'lodash'")]),t._v("，而不能使用声明式的导入方式，比如 "),a("code",[t._v("import {shuffle} from 'lodash'")]),t._v("。(That’s because CJS scripts compute their named exports as they execute, whereas ESM’s named exports must be computed during the parsing phase.\n)")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("ESM")]),t._v(" 模块可以 "),a("code",[t._v("require")]),t._v(" "),a("code",[t._v("CJS")]),t._v(" 模块，包括声明式导出的，但是依然会有很多问题，类似 Webpack 或者 Rollup 这样的工具甚至不知道该怎么出处理 "),a("code",[t._v("ESM")]),t._v(" 里的 "),a("code",[t._v("require")]),t._v(" 代码。")])]),t._v(" "),a("li",[a("p",[t._v("Node 默认支持的是 "),a("code",[t._v("CJS")]),t._v(" 标准，你需要选择 "),a("code",[t._v(".mjs")]),t._v(" 这样的后缀或者在 "),a("code",[t._v("package.json")]),t._v(" 文件中设置 "),a("code",[t._v('"type": "module"')]),t._v(" 才能开启 "),a("code",[t._v("ESM")]),t._v(" 模式。通过这种方式开启的话，如果有 "),a("code",[t._v("CJS")]),t._v(" 规范的文件，就需要将后缀改成 "),a("code",[t._v(".cjs")]),t._v("。")])])]),t._v(" "),a("h3",{attrs:{id:"加载"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#加载"}},[t._v("#")]),t._v(" 加载")]),t._v(" "),a("p",[a("code",[t._v("CJS")]),t._v(" 中的 "),a("code",[t._v("require")]),t._v(" 是同步的，他不会返回一个 "),a("code",[t._v("promise")]),t._v(" 或者是执行一个回调函数。"),a("code",[t._v("require")]),t._v(" 从磁盘或者网络中读取文件然后立即执行。")]),t._v(" "),a("p",[a("code",[t._v("ESM")]),t._v(" 中的模块 "),a("code",[t._v("loader")]),t._v(" 异步加载模块，首先解析 "),a("code",[t._v("import")]),t._v(" 和 "),a("code",[t._v("export")]),t._v(" 而不是去执行，在解析阶段，模块 "),a("code",[t._v("loader")]),t._v(" 可以在声明式的 "),a("code",[t._v("import")]),t._v(" 中检测错误并且抛出而不运行任何依赖的代码。")]),t._v(" "),a("p",[t._v("The ESM module loader then asynchronously downloads and parses any scripts that you imported, and then scripts that your scripts imported, building out a “module graph” of dependencies, until eventually it finds a script that doesn’t import anything. Finally, that script is allowed to execute, and then scripts that depend on that are allowed to run, and so on.")]),t._v(" "),a("p",[t._v("ES 模块中所有的依赖是并行下载，最后按顺序执行。")]),t._v(" "),a("h3",{attrs:{id:"差异"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#差异"}},[t._v("#")]),t._v(" 差异")]),t._v(" "),a("p",[a("code",[t._v("CJS")]),t._v(" 不能 "),a("code",[t._v("require")]),t._v(" "),a("code",[t._v("ESM")]),t._v(" 最大的原因是 "),a("code",[t._v("CJS")]),t._v(" 不支持 Top-level await。")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("foo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./foo.mjs'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"es-模块中实现-require"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#es-模块中实现-require"}},[t._v("#")]),t._v(" ES 模块中实现 "),a("code",[t._v("require")])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" createRequire "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'module'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" require "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createRequire")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("meta"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("url"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("foo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./foo.cjs'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h2",{attrs:{id:"promise"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#promise"}},[t._v("#")]),t._v(" Promise")]),t._v(" "),a("p",[a("code",[t._v("Promise.catch")]),t._v(" 只是 "),a("code",[t._v("promise.then(undefined, onRejected);")]),t._v(" 方法的一个别名。也就是说，这个方法用来注册当 "),a("code",[t._v("promise")]),t._v(" 对象状态变为 "),a("code",[t._v("Rejected")]),t._v(" 时的回调。")]),t._v(" "),a("p",[t._v("静态方法 "),a("code",[t._v("Promise.resolve(value)")]),t._v(" 可以认为是 "),a("code",[t._v("new Promise()")]),t._v(" 方法的快捷方式。")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("Promise"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolve")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'foo'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Promise")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("resolve")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolve")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'foo'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("每次调用 "),a("code",[t._v("then")]),t._v(" 方法都会返回一个"),a("strong",[t._v("新")]),t._v(" "),a("code",[t._v("promise")]),t._v(" 对象。")]),t._v(" "),a("h2",{attrs:{id:"对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#对象"}},[t._v("#")]),t._v(" 对象")]),t._v(" "),a("h3",{attrs:{id:"js-对象的两种属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js-对象的两种属性"}},[t._v("#")]),t._v(" Js 对象的两种属性")]),t._v(" "),a("p",[t._v("数据属性（"),a("em",[t._v("data properties")]),t._v("）和访问器属性（"),a("em",[t._v("accessor properties")]),t._v("）")]),t._v(" "),a("h3",{attrs:{id:"data-properties"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#data-properties"}},[t._v("#")]),t._v(" Data properties")]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("configurable")]),t._v(": 默认为 "),a("code",[t._v("true")]),t._v("。当 "),a("code",[t._v("configurable")]),t._v(" 为 "),a("code",[t._v("false")]),t._v(" 时，表示修饰的属性不可被删除、更改，不能被转化为访问器属性。(注意此操作不可逆，并且内部属性除了 "),a("code",[t._v("writable")]),t._v(" 之外再使用 "),a("code",[t._v("Object.defineProperty")]),t._v(" 会抛出错误)")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("enumerable")]),t._v("：默认为 "),a("code",[t._v("true")]),t._v("，在 "),a("code",[t._v("for-in")]),t._v(" 循环中 return。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("writable")]),t._v("：默认为 "),a("code",[t._v("true")]),t._v("。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("value")])])])]),t._v(" "),a("div",{staticClass:"custom-block danger"},[a("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),a("p",[t._v("注意，以上所说的默认为 "),a("code",[t._v("true")]),t._v(" 是字面量定义对象属性的时候。如果通过 "),a("code",[t._v("Object.defineProperty")]),t._v(" 定义的属性，均为 "),a("code",[t._v("false")]),t._v("。")])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" test "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nObject"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("defineProperty")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("test"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'name'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    value"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("333")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h3",{attrs:{id:"accessor-properties"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#accessor-properties"}},[t._v("#")]),t._v(" Accessor properties")]),t._v(" "),a("p",[t._v("对象只有 "),a("code",[t._v("getter")]),t._v(" 的属性无法被改写，在非严格模式下会被忽略，严格模式下会抛出错误。")]),t._v(" "),a("p",[t._v("对象只有 "),a("code",[t._v("setter")]),t._v(" 的属性无法被读取，在非严格模式下会返回 "),a("code",[t._v("undefined")]),t._v("，严格模式下会抛出错误。")]),t._v(" "),a("h3",{attrs:{id:"合并对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#合并对象"}},[t._v("#")]),t._v(" 合并对象")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" dest "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" res "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("assign")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dest"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" id"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("res "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" dest"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=r.exports}}]);